*--------------------------------------------------------------------------------
*-----------------------------------------------------------------------------
* <Rating>140</Rating>
*-----------------------------------------------------------------------------
    SUBROUTINE BTT.SERVER.CAPTURE.OUT(MSG)
*--------------------------------------------------------------------------------
* Developed by Thiag Jayachandaran & Shaleesh, 2016
*--------------------------------------------------------------------------------
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_GTS.COMMON
    $INSERT I_F.PGM.FILE
    $INSERT I_System
    $INSERT I_EB.TRANS.COMMON
    $INSERT I_BROWSER.TAGS
    $INSERT I_XML.EQUATE
    INCLUDE JBC.h

    COM/BTT.SERVER/BTT.INIT, REQ.START.TIME, REQUEST.TYPE, REQ.ENQ.NAME, REQ.CRIT.ARGS, FN.BTT.REQUEST, F.BTT.REQUEST, REQ.FROM, FN.BTT.SERVER.PARAM, F.BTT.SERVER.PARAM, REQ.MSG
    COM/BTT.FP/FP.MSG
    COM/TAUT.SERVER/TAUT.JNL.ID

*--------------------------------------------------------------------------------

*/// Check whether REQUEST.MESSAGE is present otherwise its a dummy response generated by EB.SET.NEXT.TASK for next version transactions
*/// to avoid capturing same request multiple times, the below check was made.

    IF REQ.MSG EQ '' THEN
        CRT 'Checking next version ---->:':OFS$PREVIOUS.APP.VERSION
        RETURN
    END

* CRT "OFS$OVERRIDES : ":OFS$OVERRIDES
* CRT "OFS$GETRECORD : ":OFS$GETRECORD
* CRT "OFS$NEWRECORD : ":OFS$NEWRECORD
* CRT "OFS$ETEXT : ":OFS$ETEXT
* CRT "OFS$MESSAGE.TEXT : ":OFS$MESSAGE.TEXT
* CRT "OFS$TXN.COMPLETE : ":OFS$TXN.COMPLETE
* CRT "OFS$SUPRESS.TXN.COMPLETE : ":OFS$SUPRESS.TXN.COMPLETE
* CRT "OFS$BROWSER.MESSAGES : ":OFS$BROWSER.MESSAGES
* CRT "OFS$CHANGED.FIELDS : ":OFS$CHANGED.FIELDS
* CRT "OFS$STATUS : ":OFS$STATUS
* CRT "OFS$MESSAGE : ":OFS$MESSAGE
* CRT "OFS$REQUEST.TYPE : ":OFS$REQUEST.TYPE
* CRT "OFS$BROWSER : ":OFS$BROWSER
* CRT "OFS$NO.CHANGE : ":OFS$NO.CHANGE
* CRT "OFS$AUTH : ":OFS$AUTH
* CRT "OFS$RECORD.READ : ":OFS$RECORD.READ
* CRT "OFS$BUILD.ERROR : ":OFS$BUILD.ERROR
* CRT "ordDetails : ":ordDetails


    IF INDEX(REQ.MSG,'BROWSER.XML',1) THEN
        REQ.START.TIME = '' ; REQUEST.TYPE = '' ; REQ.IO.STATS = '' ; REQ.ENQ.NAME = '' ; RE.ENQ.COMP = '' ; REQ.USER = '' ; REQ.CRIT.ARGS = '' ; REQ.FROM = ''
        REQ.FROM = 'BROWSER'

        MSG.TAG = REQ.MSG
        THE.TAG.NAME = "<requestType>"
        GOSUB GET.TAG.VALUE
        REQUEST.TYPE = THE.TAG.VALUE

        THE.TAG.NAME = "<routineName>"
        GOSUB GET.TAG.VALUE
        REQUEST.ARG = THE.TAG.VALUE

        GOSUB CHECK.RESPONSE

        IF RESP.VAL EQ '' THEN

            RESPMSG.SAVE = MSG
            MSG.TAG = REQ.MSG

            GOSUB PROCESS.BROWSER

            MSG = RESPMSG.SAVE

        END
    END

    IF (BTT.PROCESS.MSG AND REQ.APPL.OPER EQ 'PROCESS') OR (REQUEST.ARG = 'OS.FAST.PATH' AND ERR.MSG EQ '') THEN

        IF REQUEST.TYPE EQ 'CREATE.SESSION' THEN
            MSG.TAG = MSG
            THE.TAG.NAME = "<token>"
            GOSUB GET.TAG.VALUE
            TOKEN.VAL = THE.TAG.VALUE

            REQ.RESP.MSG = REQ.MSG:'<BTT.TOKEN>':TOKEN.VAL:'</BTT.TOKEN>'

            MSG.TAG = REQ.MSG

            THE.TAG.NAME = "<password>"
            GOSUB GET.TAG.VALUE
            PASS.VAL = THE.TAG.VALUE

            PASS.ENC.VAL = ENCRYPT(PASS.VAL, TOKEN.VAL, enc)
            CHANGE '<password>':PASS.VAL:'</password>' TO '<password>':PASS.ENC.VAL:'</password>' IN REQ.RESP.MSG

        END ELSE
            REQ.RESP.MSG = REQ.MSG
        END
        REQ.RESP.MSG<-1> = MSG

        IF FP.MSG THEN REQ.RESP.MSG<1> := '<ofsRequest>':FP.MSG:'</ofsRequest>'

        IF TAUT.JNL.ID THEN
            MASTER.JNL.ID = TAUT.JNL.ID
        END ELSE
            SAVE.E = E
            MASTER.JNL.ID = System.getVariable('MASTER.JNL.ID')
            IF E OR MASTER.JNL.ID EQ 'MASTER.JNL.ID' THEN
                E = ''
                MASTER.JNL.ID = System.getVariable('MASTER.JNL.ID.AUT')
                IF E OR MASTER.JNL.ID EQ 'MASTER.JNL.ID.AUT' THEN
                    MASTER.JNL.ID = ''
                    E = ''
                END
            END
            E = SAVE.E
        END
        IF MASTER.JNL.ID THEN REQ.RESP.MSG<1> := '<MASTER.JNL.ID>':MASTER.JNL.ID:'</MASTER.JNL.ID>'

        WRITE REQ.RESP.MSG TO F.BTT.REQUEST, REQ.ENQ.NAME ON ERROR
            CRT 'Unable to WRITE request to BTT.REQUEST for txn ':REQ.APPL.ID
        END
        FP.MSG = '' ; REQ.MSG = '' ; MASTER.JNL.ID = ''
    END

    RETURN

*--------------------------------------------------------------------------------
PROCESS.BROWSER:
*---------------

    BTT.PROCESS.MSG = ''

    THE.TAG.NAME = "<token>"
    GOSUB GET.TAG.VALUE
    TOKEN.VAL = THE.TAG.VALUE

    THE.TAG.NAME = "<requestType>"
    GOSUB GET.TAG.VALUE
    REQUEST.TYPE = THE.TAG.VALUE

    THE.TAG.NAME = "<companyId>"
    GOSUB GET.TAG.VALUE
    REQ.COMP.ID = THE.TAG.VALUE

    THE.TAG.NAME = "<compScreen>"
    GOSUB GET.TAG.VALUE
    REQ.APPL.USER = THE.TAG.VALUE['_',2,1]

    THE.TAG.NAME = "<routineArgs>"
    GOSUB GET.TAG.VALUE
    REQ.UTIL.ARGS = THE.TAG.VALUE

    TIME.VAL = CHANGE(OCONV(TIME(),'MTS'),':',''):MOD(SYSTEM(12),1000)
    SYSDATE = OCONV(DATE(),'DY4'):OCONV(DATE(),'DM'):OCONV(DATE(),'DD')

    IF REQUEST.TYPE EQ 'OFS.APPLICATION' THEN
        BTT.PROCESS.MSG = 1
        REQUEST.TYPE = 'APP'

        THE.TAG.NAME = "<application>"
        GOSUB GET.TAG.VALUE
        REQ.APPL.NAME = THE.TAG.VALUE

        THE.TAG.NAME = "<version>"
        GOSUB GET.TAG.VALUE
        REQ.APPL.VER = THE.TAG.VALUE

        THE.TAG.NAME = "<ofsFunction>"
        GOSUB GET.TAG.VALUE
        REQ.APPL.FUNC = THE.TAG.VALUE

        THE.TAG.NAME = "<transactionId>"
        GOSUB GET.TAG.VALUE
        REQ.APPL.ID = THE.TAG.VALUE

        THE.TAG.NAME = "<ofsOperation>"
        GOSUB GET.TAG.VALUE
        REQ.APPL.OPER = THE.TAG.VALUE

        MSG.TAG = MSG
        THE.TAG.NAME = "<title>"
        GOSUB GET.TAG.VALUE
        RESP.TITLE = THE.TAG.VALUE
        CHANGE ' ' TO '_' IN RESP.TITLE

        REQ.ENQ.NAME = SYSDATE:'*':TODAY:'-':TIME.VAL:'-':REQ.APPL.NAME:REQ.APPL.VER:'-':REQ.APPL.FUNC:'-':REQ.APPL.ID:'-':REQ.APPL.OPER:'-':RESP.TITLE

        TOT.TXN.REQUEST ++
    END

    IF REQUEST.ARG EQ 'OS.FAST.PATH' THEN
        FP.APPL.NAME = FP.MSG['/', 1, 1]
        REQ.ENQ.NAME = SYSDATE:'*':TODAY:'-':TIME.VAL:'-':FP.APPL.NAME:'-':'OS.FAST.PATH'
    END

    IF REQUEST.TYPE EQ 'CREATE.SESSION' THEN
        BTT.PROCESS.MSG = 1
        REQ.APPL.OPER = 'PROCESS'
        enc = JBASE_CRYPT_3DES_BASE64
        REQ.ENQ.NAME = SYSDATE:'*':TODAY:'-':TIME.VAL:'-':REQUEST.TYPE
    END

    REQ.START.TIME  = TIMESTAMP() ; REQ.IO.STATS = @USERSTATS

    RETURN

*--------------------------------------------------------------------------------
CHECK.RESPONSE:
*--------------

    ERR.MSG = ''
    RESP.VAL = ''

    IF INDEX(MSG,'SECURITY.VIOLATION',1) OR INDEX(MSG,'ERROR.LOGIN',1) OR INDEX(MSG,'Error Message',1) OR INDEX(MSG,'<errormessage>',1) OR INDEX(MSG, 'ERROR :',1)  THEN
        RESP.VAL = 'ERR'
        ERR.MSG = 'ERROR'
        IF INDEX(MSG,'<fieldError>Y</fieldError>',1) THEN
            ERR.MSG = 'FIELD.ERROR'
        END
        RETURN
    END

    IF ERR.MSG EQ '' AND REQUEST.TYPE EQ 'OFS.APPLICATION' THEN
        MSG.TAG = MSG
        THE.TAG.NAME = "<responseType>"
        GOSUB GET.TAG.VALUE
        RESPONSE.TYPE = THE.TAG.VALUE

        THE.TAG.NAME = "<msg>"
        GOSUB GET.TAG.VALUE
        RESPMSG = THE.TAG.VALUE

        IF INDEX(RESPMSG, 'Txn Complete',1) THEN
            RESP.VAL = ''
        END ELSE
*/// The below condition was added to capture transaction messages with NEXT.VERSION, T24 brower triggers request and the response doesnt have Txn Complete
*/// so to capture the transactions which will automatically open next application in the workflow the below code was done
            THE.TAG.NAME = "<previousVersion>"
            GOSUB GET.TAG.VALUE
            PREV.VERSION = THE.TAG.VALUE
            IF PREV.VERSION ELSE
                RESP.VAL = 'NOT REQUIRED'
            END
        END

    END

    RETURN

*--------------------------------------------------------------------------------
GET.TAG.VALUE:
*-------------

* Pull out the contents of a given tag.

    WORK.TAG = THE.TAG.NAME
    THE.TAG.VALUE = ''
    SPOS = 0
    EPOS = 0
    START.POS = 0

    IF ( (MSG.TAG) AND (WORK.TAG) ) THEN

* Remove '<' and '>' characters from tag name if passed in
        CONVERT '<' TO '' IN WORK.TAG
        CONVERT '>' TO '' IN WORK.TAG

        IF INDEX(MSG.TAG, WORK.TAG, 2) <> 0 THEN  ;* If there is not at least 2 occourances there is no value
            START.POS = INDEX(MSG.TAG, WORK.TAG: '>',1)     ;* get the starting position of the tag
            EPOS = INDEX(MSG.TAG, '</':WORK.TAG,1)          ;* get the end position of the tag
            IF START.POS AND EPOS THEN  ;* if start tag and end tag present then
                SPOS = START.POS+1+LEN(WORK.TAG)  ;* calculate the position of the tag value in the message
                THE.TAG.VALUE = MSG.TAG[SPOS, EPOS-SPOS]    ;* extract the tag value
            END
        END
    END

    RETURN

*--------------------------------------------------------------------------------

END



